# -*- coding: utf-8 -*-
"""R Code for Titanic EDA and Machine Learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/154xHwhCCbbBVXmrCqkd4Y2l1Az9dX3H1

##R Code for Titanic EDA and Machine Learning 
##This code will not execute here but you can copy and paste into Rstudio directly
"""

# I found this link below extremely useful for sifting through the titanic dataset
# https://github.com/datasciencedojo/IntroDataVisualizationWithRAndGgplot2/blob/master/IntroDataVizRAndGgplot2.R


# By installing this package it is possible to introduce the titanic3 dataset into any R environment
install.packages("PASWR")
library(PASWR)

# tidyverse R The tidyverse is a collection of R packages designed 
# for data science. All packages share an underlying design philosophy, 
# grammar, and data structures that are especially useful for data 
# transformation (dplyr)) and visualization (ggplot2)
install.packages("tidyverse")
library(tidyverse)

# Also possible to install separately
#install.packages("ggplot2")
#install.packages("dplyr")
#library(dplyr)
#library(ggplot2)

# You could also tretrieve data from the titanic package
# and this would instance a titanic_train and a titanic_test
#install.package(titanic)
#library(titanic)

# we follow here in part the approach data from Hal Varian
# https://www.aeaweb.org/articles?id=10.1257/jep.28.2.3

#base R
str(titanic3)
titanic <- titanic3
View(titanic)

#tidyverse R
glimpse(titanic)

# Some Preliminary estimation before we force survived to be a factor

summarise(titanic, SurvivalRate = sum(survived)/nrow(titanic)*100)

#Just to put in stoarage a dataset without/before changes introduced
titanicB4Fct <- titanic

# Setting up factors is important because so that data is treated as 
# categories and not numbers. Factor data is often observed in
# a business context and ggplot2 offers a substantial syntax for 
# mapping and visualizing factor data.
titanic$pclass <- as.factor(titanic$pclass)
titanic$survived <- as.factor(titanic$survived)
titanic$sex <- as.factor(titanic$sex)
titanic$embarked <- as.factor(titanic$embarked)

# A quick inspection just to see what the effect of changes are on dataset
glimpse(titanic)

# ggplot2 and dplyr open up an expansive set of commands to 
# unearth key details, trends and patterns

# Question 1 - What was the survival rate? 

# The survived variable can be presented using a simple barchart
ggplot(titanic, aes(x = survived)) + 
  geom_bar()

# Numbers perishing or surviving
table(titanic$survived)

809+500

# If you really want percentages.
prop.table(table(titanic$survived))

# Add some additional customization for labels and theme.
ggplot(titanic, aes(x = survived)) + 
  theme_bw() +
  geom_bar() +
  labs(y = "Passenger Count",
       title = "Titanic Survival Rates")


# Question 2 - What was the survival rate broken disaggregated for 
# male and females? 


# Plot barplot of passenger Sex
ggplot(titanic, aes(x = sex)) +
  geom_bar()

# We can apply color to investigate varying layers (i.e., dimensions)
# of the data simultaneously.

ggplot(titanic, aes(x = sex, fill = survived)) + 
  theme_bw() +
  geom_bar() +
  labs(y = "Passenger Count",
       title = "Titanic Survival Rates by Sex")

# Question 3 - What was the survival rate by passenger class marked on ticket? 
#
ggplot(titanic, aes(x = pclass, fill = survived)) + 
  theme_bw() +
  geom_bar() +
  labs(y = "Passenger Count",
       title = "Titanic Survival Rates by passenger class")


# Question 4 - What was the survival rate by class of ticket and sex?
# We can leverage the facets command to further segment the data and enable
# some visual dissagegation of the data.
#
ggplot(titanic, aes(x = sex, fill = survived)) + 
  theme_bw() +
  facet_wrap(~ pclass) +
  geom_bar() +
  labs(y = "Passenger Count",
       title = "Titanic Survival Rates by passenger class and gender")

# We will now examine more intently continuous numerical data
# using ggplot2. Visual exploration of columns or single 
# numeric variables (i.e. attributes, features) illustrate how
# ggplot2 facilitates potent visualization.
#

# Question 5 - What is the distribution of passenger ages?
#
# The histogram is a staple of visualizing numeric data as it very 
# powerfully communicates the distrubtion of a variable (i.e., column).
#
ggplot(titanic, aes(x = age)) +
  theme_bw() +
  geom_histogram(binwidth = 10) +
  labs(y = "Passenger Count",
       x = "Age (binwidth = 10)",
       title = "Passenger Age Distribtion")


# Question 6 - What are the survival rates disaggegated by age?
#
ggplot(titanic, aes(x = age, fill = survived)) +
  theme_bw() +
  geom_histogram(binwidth = 5) +
  labs(y = "Passenger Count",
       x = "Age (binwidth = 5)",
       title = "Titanic Passenger Survival Rates by Age")

# Another important visualization in the tidyverse toolkit is the 
# box-and-whisker plot.
# A box and whisker plot (box plot) exhibits the five-number summary 
# of a set of data. The five-number summary is the minimum, first quartile, 
# median, third quartile, and maximum. In a box plot, the first quartile to 
# the third quartile - is typically represented as a box. A vertical line 
# cuts through the box at the median. Although not obviously important here
# at first glance, age proves to be very significant predictor for survival

ggplot(titanic, aes(x = survived, y = age)) +
  theme_bw() +
  geom_boxplot() +
  labs(y = "Age",
       x = "Survived",
       title = "Titanic Passenger Survival Rates by Age")


# Question 7 - What is the survival rates by age when segmented
#                    by gender and class of ticket?
#
# A related visualization to the histogram is a density plot. Think of
# a density plot as a smoothed version of the histogram. Using ggplot2
# we can use facets to allow for visual drill-down via density plots.
# I flipped Age and Survived

ggplot(titanic, aes(x = age, fill = survived)) +
  theme_bw() +
  facet_wrap(sex ~ pclass) +
  geom_density(alpha = 0.5) +
  labs(y = "Survived",
       x = "Age",
       title = "Titanic Survival Rates by Age, Pclass and Sex")

# If you prefer histograms, no problem!
ggplot(titanic, aes(x = age, fill = survived)) +
  theme_bw() +
  facet_wrap(sex ~ pclass) +
  geom_histogram(binwidth = 5) +
  labs(y = "Survived",
       x = "Age",
       title = "Titanic Survival Rates by Age, Pclass and Sex")

#################################################
# Class 2

# Here we look more closely at Survival and Fare

# Eight Question - How does fare (a proxy for class) and sex influence survival?

# First, we will do some preliminary analyses and summarise the mean and median costs of fares
# Check out the mean Fare
titanic %>%
  summarise(meanFare = mean(fare, na.rm=TRUE))

# Check out median Fare overall - the difference between mean and median will gives a sense of skew
titanic %>%
  summarise(medianFare = median(fare, na.rm=TRUE))

# Check out the mean Fare for men
titanic %>%
  filter(sex == "male") %>%
  summarise(meanFareMen = mean(fare, na.rm=TRUE))

# Check out mean Fare for women
titanic %>%
  filter(sex == "female") %>%
  summarise(meanFareWomen = mean(fare, na.rm=TRUE))

# Check out the median Fare for men
titanic %>%
  filter(sex == "male") %>%
  summarise(medianFareMen = median(fare, na.rm=TRUE))

# Check out median Fare for women
titanic %>%
  filter(sex == "female") %>%
  summarise(medianFareWomen = median(fare, na.rm=TRUE))

# A few pivot Tables relating to Fare
#Ninth Question - how does class and sex affect the mean and median fares

pivotfare0 <- titanic %>%
  group_by(pclass, sex) %>%
  summarize(MeanFare = mean(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass)
View(pivotfare0)

pivotfare1 <- titanic %>%
  group_by(pclass, sex) %>%
  summarize(MedianFare = median(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass)
View(pivotfare1)

#Tenth Question - how does class and sex and fares (mean and median) influence
# survival

pivotfare2 <- titanic %>%
  group_by(pclass, survived, sex) %>%
  summarize(MeanFare = mean(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass, survived)
View(pivotfare2)

pivotfare3 <- titanic %>%
  group_by(pclass, survived, sex) %>%
  summarize(MedianFare = median(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass, survived)
View(pivotfare3)



# Eleventh Question does point of Departure (Embarcation) influence fare
pivotfare4 <- titanic %>%
  group_by(pclass, embarked) %>%
  summarize(MeanFare = mean(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass)
View(pivotfare4)

pivotfare5 <- titanic %>%
  group_by(pclass, embarked) %>%
  summarize(MedianFare = median(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass)
View(pivotfare5)

# Twelfth Question - Is there a link between fare, point of departure and survival

pivotfare6 <- titanic %>%
  group_by(pclass, survived, embarked) %>%
  summarize(MeanFare = mean(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass, survived)
View(pivotfare6)

pivotfare7 <- titanic %>%
  group_by(pclass, survived, embarked) %>%
  summarize(MedianFare = median(fare, na.rm=TRUE),
            PassengerCount = n()) %>%
  arrange(pclass, survived)
View(pivotfare7)

#write data out
write.csv(pivotfare7,"pivotfare7.csv")

# data camp
# https://www.datacamp.com/community/tutorials/tidyverse-tutorial-r
# The difference is somewhat striking

# Scatter plot of Age vs Fare
ggplot(titanic, aes(x = age, y = fare)) +
  geom_point()

# Scatter plot of Age vs Fare colored by Sex
ggplot(titanic, aes(x = age, y = fare, color = sex)) +
  geom_point()

# Scatter plot of Age vs Fare colored by Sex faceted by Survived
ggplot(titanic, aes(x = age, y = fare, color = sex)) +
  geom_point() +
  facet_grid(~survived)



glimpse(titanic)

# Add a new feature (i.e., column) to the data frame for FamilySize
# A new column was added without using tidyversemutate
titanic$FamilySize <- 1 + titanic$sibsp + titanic$parch
View(titanic)

# Thirteenth Question - Is there a link between family size and survival
# install.packages("ggplot2")
# library(ggplot2)

ggplot(titanic, aes(x = FamilySize, fill = survived)) +
  theme_bw() +
  facet_wrap(sex ~ pclass) +
  geom_histogram(binwidth = 1)


# Build Pivot tables to explore family size and survival
#install.packages("dplyr")
# library(dplyr)

# Some quick pivots
pivot0 <- titanic %>%
  group_by(pclass, survived) %>%
  summarize(AvgFamilySize = mean(FamilySize),
            PassengerCount = n()) %>%
  arrange(pclass, survived)
View(pivot0)

pivot1 <- titanic %>%
  group_by(pclass, sex, survived) %>%
  summarize(AvgFamilySize = mean(FamilySize),
            PassengerCount = n()) %>%
  arrange(pclass, sex, survived)
View(pivot1)

pivot2 <- titanic %>%
  group_by(pclass, sex, embarked, survived) %>%
  summarize(AvgFamilySize = mean(FamilySize),
            PassengerCount = n()) %>%
  arrange(pclass, sex, embarked, survived)
View(pivot2)

# Hal Varian
# https://www.aeaweb.org/articles?id=10.1257/jep.28.2.3

# compare to logit before factors
model.logitAge <- glm(survived ~  age, data = titanicB4Fct)
summary(model.logitAge)

model.logit <- glm(survived ~ pclass + sex + age + sibsp, data = titanicB4Fct)
summary(model.logit)

#install.packages("forcats")
#library(forcats)
? forcats
titanicV <- titanic %>% 
  mutate(survived = factor(survived)) %>%
  mutate(survived = fct_recode(survived, "died" = "0", "lived" = "1"))

glimpse(titanicV)

sex <- titanicV$sex
age <- titanicV$age
class <- titanicV$pclass
survived <- titanicV$survived
sibsp <- titanic$sibsp


# fit a simple tree
library("rpart")
model.rpart <- rpart(survived ~ class + age)
model.prune <- prune(model.rpart,cp=.038)

# plot it
library(rpart.plot)
# Like Figure 1 in Hal Varian paper
rpart.plot(model.prune,type=0,extra=2)

graphics.off()

################################################
# ctree
################################################
#install.packages("party")
library(party)
model.ctree <- ctree(as.factor(survived) ~ pclass + sex + age + sibsp, data = titanicV)
plot(model.ctree)


all.pred <- predict(model.ctree)
all.conf <- table(titanicV$survived,all.pred)
all.conf
all.pred
titanicV$survived

all.error <- all.conf[2,1]+all.conf[1,2]
all.error


# https://towardsdatascience.com/analyzing-the-titanic-with-a-business-analyst-mindset-using-r-ggplot2-ee5355a4dab3